// Code generated by MockGen. DO NOT EDIT.
// Source: service.go

// Package assignment is a generated GoMock package.
package assignment

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIFAssignmentService is a mock of IFAssignmentService interface.
type MockIFAssignmentService struct {
	ctrl     *gomock.Controller
	recorder *MockIFAssignmentServiceMockRecorder
}

// MockIFAssignmentServiceMockRecorder is the mock recorder for MockIFAssignmentService.
type MockIFAssignmentServiceMockRecorder struct {
	mock *MockIFAssignmentService
}

// NewMockIFAssignmentService creates a new mock instance.
func NewMockIFAssignmentService(ctrl *gomock.Controller) *MockIFAssignmentService {
	mock := &MockIFAssignmentService{ctrl: ctrl}
	mock.recorder = &MockIFAssignmentServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIFAssignmentService) EXPECT() *MockIFAssignmentServiceMockRecorder {
	return m.recorder
}

// My mocks base method.
func (m *MockIFAssignmentService) My(input *AssignmentMyInput) (*AssignmentMyOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "My", input)
	ret0, _ := ret[0].(*AssignmentMyOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// My indicates an expected call of My.
func (mr *MockIFAssignmentServiceMockRecorder) My(input interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "My", reflect.TypeOf((*MockIFAssignmentService)(nil).My), input)
}

// MockifPrivateAssignmentService is a mock of ifPrivateAssignmentService interface.
type MockifPrivateAssignmentService struct {
	ctrl     *gomock.Controller
	recorder *MockifPrivateAssignmentServiceMockRecorder
}

// MockifPrivateAssignmentServiceMockRecorder is the mock recorder for MockifPrivateAssignmentService.
type MockifPrivateAssignmentServiceMockRecorder struct {
	mock *MockifPrivateAssignmentService
}

// NewMockifPrivateAssignmentService creates a new mock instance.
func NewMockifPrivateAssignmentService(ctrl *gomock.Controller) *MockifPrivateAssignmentService {
	mock := &MockifPrivateAssignmentService{ctrl: ctrl}
	mock.recorder = &MockifPrivateAssignmentServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockifPrivateAssignmentService) EXPECT() *MockifPrivateAssignmentServiceMockRecorder {
	return m.recorder
}
